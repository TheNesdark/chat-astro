---
import supabase from "@/libs/Supabase";
import Header from "@components/ChatHeader.astro";
import ChatContainer from "@components/ChatContainer.jsx";
import ChatSend from "@components/ChatSend.astro";
import "../styles/global.css";
import CamViewer from "@components/modals/CamViewer.astro";
import { getCurrentUser, refreshSession, clearCookies } from "@/services/Auth";

const accessToken = Astro.cookies.get("sb-access-token")?.value;
const refreshToken = Astro.cookies.get("sb-refresh-token")?.value;

if (!accessToken || !refreshToken) {
  return Astro.redirect("/Login");
}

let user = null;

try {
  user = await getCurrentUser(accessToken);
  if (!user) {
    throw new Error("Token inválido");
  }

} catch (validateError) {
  try {
    const refreshData = await refreshSession(refreshToken);

    if (!refreshData.session) {
      throw new Error("No se pudo refrescar");
    }

    Astro.cookies.set("sb-access-token", refreshData.session.access_token, {
      httpOnly: true,
      secure: import.meta.env.PROD,
      sameSite: "strict",
      path: "/",
      maxAge: 60 * 60 * 24, // 24h
    });

    Astro.cookies.set("sb-refresh-token", refreshData.session.refresh_token, {
      httpOnly: true,
      secure: import.meta.env.PROD,
      sameSite: "strict",
      path: "/",
      maxAge: 60 * 60 * 24 * 7, // 7 días
    });

    user = refreshData.user;

  } catch (error) {
    clearCookies(Astro.cookies);
    return Astro.redirect("/Login");
  }
}


if (!user) {
  return Astro.redirect("/Login");
}


const userMetadata = user.user_metadata || {};
const displayName = userMetadata.display_name || user.email?.split('@')[0] || 'Usuario';
const avatarUrl = userMetadata.avatar_url || null;

const userData = {
  id: user.id,
  email: user.email,
  username: displayName,
  avatar: avatarUrl,
};
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>Astro Basics</title>
  </head>
  <body>
    <Header user={userData} />
    <ChatContainer client:load user={user} />
    <ChatSend />
    <CamViewer />
  </body>
  <script type="module" src="/src/main.js" defer></script>
</html>

<style>
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  body {
    display: flex;
    flex-direction: column;
    height: 100vh;
    background: #1e1e1e;
  }
</style>
